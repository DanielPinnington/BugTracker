@model IEnumerable<BugTracker.Models.Ticket>
  
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var grid = new WebGrid(canPage: true, rowsPerPage: 4);
    grid.Bind(source: Model);
}

@if (User.Identity.IsAuthenticated)
{
    <!DOCTYPE html>

    <html>
    <head>
        <meta name="viewport" content="width=device-width" />

    </head>
    <body>
        <h1>Welcome Back! @HttpContext.Current.User.Identity.Name </h1>
        <p>
            @Html.ActionLink("Create New", "Create")
        </p>


        @{ var count = Model.Count();
            var priorityLowCount = Model.Count(x => x.Priorities == "Low");
            var priorityMediumCount = Model.Count(x => x.Priorities == "Medium");
            var priorityHighCount = Model.Count(x => x.Priorities == "High");
            var unassignedProjects = Model.Count(x => x.CurrentProject == null);
            var monday = DateTime.Today.AddDays(-(int)DateTime.Today.DayOfWeek + (int)DayOfWeek.Monday);

            var recentTickets = Model.Count(x => x.CreatedDate >= monday); //This calculates a week from mondays tickets

            <table style="float:left; min-height: 75px; width: 320px; margin-left: 10px; border:groove;">
                <tr>
                    <td>
                        <button type="button" class="btn btn-success" onclick="location.href='https://localhost:44392/Ticket/GetTicketsIndex?search=Low';">
                            <h3>@Html.DisplayName("Unresolved Low Tickets")</h3>
                            @priorityLowCount.ToString()
                        </button>
                    </td>
                </tr>
            </table>

            <table style="float:left; min-height: 75px; width: 320px; margin-left: 60px; border:groove;">
                <tr>
                    <td>
                        <button type="button" class="btn btn-success" onclick="location.href='https://localhost:44392/Ticket/GetTicketsIndex?search=Medium';">
                            <h3>@Html.DisplayName("Unresolved Medium Tickets")</h3>
                            @priorityMediumCount.ToString()
                        </button>
                    </td>
                </tr>
            </table>
            <table style="float:left; min-height: 75px; width: 320px; margin-left: 90px; border:groove;">
                <tr>
                    <td>
                        <button type="button" class="btn btn-success" onclick="location.href='https://localhost:44392/Ticket/GetTicketsIndex?search=High';">
                            <h3>@Html.DisplayName("Unresolved High Tickets")</h3>
                            @priorityHighCount.ToString()
                        </button>
                    </td>
                </tr>
            </table>

            <table style="float:left; min-height: 75px; width: 320px; margin-left: 10px; margin-top: 30px; left: 100px; bottom: 100px; border:groove;">
                <tr>
                    <td>
                        <h3>@Html.DisplayName("Tickets Available")</h3>
                        <h4>Currently: @count.ToString()</h4>
                        <h5 style="text-align: center">View and Submit bug tickets.</h5>

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            <center>
                                <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("GetTicketsIndex", "Ticket")'">
                                    View Tickets
                                </button>
                            </center>
                            <ul>
                            </ul>
                        }
                    </td>
                </tr>
            </table>

            <table style="min-height: 75px; width: 320px; margin-left: 10px; margin-top: 320px; bottom: 100px; border:groove;">
                <tr>
                    <td>
                        <h3>@Html.DisplayName("Tickets this week: " + recentTickets.ToString())</h3>

                        <h5 style="text-align: center">View and Submit bug tickets.</h5>

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            <center>
                                @{ /*<button type="button" class="btn btn-success" onclick="location.href='@Url.Action("GetTicketsIndex", "Ticket")'"> (This is when the project goes live) */}
                                <button type="button" class="btn btn-success" onclick="location.href='https://localhost:44392/Ticket/GetTicketsIndex?search=Medium';">

                                    View Tickets
                                </button>

                            </center>
                            <ul>
                            </ul>
                        }
                    </td>
                </tr>
            </table>
        }
        <table class="table">
            <tr">
                <th style="color: red;">
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Priorities)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CurrentUser)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CurrentProject)
                </th>

                <th></th>
            </tr">


            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>

                        @Html.DisplayFor(modelItem => item.Description, new { @class = "hidden" })

                    </td>
                    <td>
                        @item.CreatedDate.ToShortDateString()
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Priorities)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CurrentUser)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CurrentProject)
                    </td>

                    <td>

                        @Html.ActionLink("Edit", "Edit", new { id = item.Id })

                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
            <style>
                .div1 {
                    left: auto;
                    width: 300px;
                    height: 100px;
                    border: 1px solid #dadce0;
                }

                .div2 {
                    width: 300px;
                    height: 100px;
                    border: 1px solid #dadce0;
                }
            </style>
    </body>
</html>

}

@if (!User.Identity.IsAuthenticated)
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div>
            @Html.ActionLink("Login", "Login", "User")
        </div>
    }
}
@{ 
    /*
           <div id="grid" style="float: right; height: 10px; width: 740px; margin-right: 14px; margin-top: -330px;">
                    @grid.GetHtml(

                                tableStyle: "table table-responsive table-bordered",
                                columns: grid.Columns(
                                 grid.Column(columnName: "Title", header: "Title"),
                                 grid.Column(columnName: "Description", header: "Description"),
                                 grid.Column(columnName: "CreatedDate", header: "Date", format: (item) => item.CreatedDate.ToShortDateString())

                                 //format: @<text><div class="edit" data-id="@item.ID" data-propertyname="Title">@item.Title</div></text>
                                 // format:@<text><div class="editSelect" data-id="@item.ID" data-propertyname="Priorities">@item.Priorities</div></text>)
                                 //format:@<text><div class="edit" data-id="@item.ID" data-propertyname="Description">@item.Description</div></text>
                                 )
                             )
                    </div>*/
}
