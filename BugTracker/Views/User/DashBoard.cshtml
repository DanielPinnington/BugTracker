@using BugTracker.Models
@model IEnumerable<BugTracker.Models.Ticket>


@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var grid = new WebGrid(canPage: true, rowsPerPage: 10);
    grid.Bind(source: Model);
}

@if (User.Identity.IsAuthenticated)
{
    <!DOCTYPE html>

    <html>
    <head>
        <meta name="viewport" content="width=device-width" />

    </head>
    <body>
        <h2>Welcome, @HttpContext.Current.User.Identity.Name </h2>

        @{ var count = Model.Count();

            BugTracking db = new BugTracking();

            var dbCount = db.Tickets.Count();

            var priorityLowCount = db.Tickets.Count(x => x.Priorities == "Low");
            var priorityMediumCount = db.Tickets.Count(x => x.Priorities == "Medium");
            var priorityHighCount = db.Tickets.Count(x => x.Priorities == "High");
            var unassignedProjects = db.Tickets.Count(x => x.CurrentProject == null);
            var monday = DateTime.Today.AddDays(-(int)DateTime.Today.DayOfWeek + (int)DayOfWeek.Sunday);

            var recentTickets = Model.Count(x => x.CreatedDate >= monday); //This calculates a week from mondays tickets

            <table style="float: left; width: 100%; min-width: 350px; min-height: 10px; max-width: 30px; position: fixed; border: none; z-index: 1;">
                <tr>
                    <td>
                        <button type="button" class="btn-outline-success" style="width: 100%; min-width: 30px;" onclick="location.href = 'https://localhost:44392/Ticket/Tickets?search=Low';">
                            <h3>@Html.DisplayName("Unresolved Low Tickets")</h3>
                            <b>@priorityLowCount.ToString()</b>
                        </button>
                    </td>
                    <table style="float: left; width: 100%; min-width: 350px; max-width: 30px; margin-left: 400px; position: fixed; border: none; ">
                        <tr>
                            <td>
                                <button type="button" class="btn-outline-success" style="width: 100%;" onclick="location.href='https://localhost:44392/Ticket/Tickets?search=Medium';">
                                    <h3>@Html.DisplayName("Unresolved Medium Tickets")</h3>
                                    <b>@priorityMediumCount.ToString()</b>
                                </button>
                            </td>
                            <table style="float: left; width: 100%; min-width: 350px; max-width: 250px; margin-left: 800px; position: fixed; border: none; ">
                                <tr>
                                    <td>
                                        <button type="button" class="btn-outline-success" style="width: 100%;" onclick="location.href='https://localhost:44392/Ticket/Tickets?search=High';">
                                            <h3>@Html.DisplayName("Unresolved High Tickets")</h3>
                                            <b>@priorityHighCount.ToString()</b>
                                        </button>
                                    </td>
                                </tr>
                            </table>
                        </tr>
                    </table>
                </tr>
            </table>


            <table style="float: left; min-height: 75px; width: 320px; min-width: 24px; margin: 10px 0; margin-top: 120px; position: fixed; ">
                <tr>
                    <td>
                        <h3>&nbsp;@Html.DisplayName("Tickets Available")</h3>
                        <h4><b>&nbsp;@dbCount.ToString()</b></h4>
                        <h5 style="text-align: center">View and Submit bug tickets.</h5>

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            <center>
                                <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("Tickets", "Ticket")'">
                                    View Tickets
                                </button>
                            </center>
                            <ul>
                            </ul>
                        }
                    </td>
                </tr>
            </table>

            <table style="min-height: 75px; width: 320px; margin-top: 320px; bottom: 100px;">
                <tr style="w">
                    <td>
                        <h3>&nbsp;@Html.DisplayName("Tickets this Week")</h3>
                        <h4><b>&nbsp;@recentTickets.ToString()</b></h4>

                        <h5 style="text-align: center">View and Submit bug tickets.</h5>

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            <center>
                                @{ /*<button type="button" class="btn btn-success" onclick="location.href='@Url.Action("Tickets", "Ticket")'"> (This is when the project goes live) */}
                                <button type="button" class="btn btn-success" onclick="location.href='https://localhost:44392/Ticket/Tickets?Search=&sort=CreatedDate&sortdir=DESC';">

                                    View Tickets
                                </button>

                            </center>
                            <ul>
                            </ul>
                        }
                    </td>
                </tr>
            </table>
        }
        <table class="table" style="float: right; height: 20%; min-height: 30%; min-width: 39%; max-height: 10%; width: 20%; margin: 400px; margin-top: -645px; position: fixed;">
            <tr">
                <th style="">
                    @Html.DisplayNameFor(models => models.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(models => models.CreatedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(models => models.Priorities)
                </th>
                <th>
                    @Html.DisplayNameFor(models => models.CurrentUser)
                </th>
                <th>
                    @Html.DisplayNameFor(models => models.CurrentProject)
                </th>

                <th></th>
            </tr">


            @foreach (var item in Model)
            {
                <tr style="cursor:pointer" onclick="Redirect()">
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @item.CreatedDate.ToShortDateString()
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Priorities)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CurrentUser)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CurrentProject)
                    </td>
                </tr>
            }
            <style>
                tr:hover, tr.selected {
                    background-color: rgb(128, 128, 128, .0);
                }

                button1:hover {
                    background-color: rgb(128, 128, 128, .0);
                }

                td {
                    padding: 0px;
                }

                .div1 {
                    left: auto;
                    width: 300px;
                    height: 100px;
                    border: 1px solid #dadce0;
                }

                .div2 {
                    width: 300px;
                    height: 100px;
                    border: 1px solid #dadce0;
                }
            </style>
    </body>
</html>

}

@if (!User.Identity.IsAuthenticated)
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div>
            @Html.ActionLink("Login", "Login", "User")
        </div>
    }
}

<script type="text/javascript">
    function Redirect() {
        location.href = "https://localhost:44392/Ticket/Tickets";
    }

    $("tr").click(function () {
        $(this).addClass("selected").siblings().removeClass("selected");
    });
</script>
<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
<br />
<div id="container" style="min-width: 280px; height: 260px; margin: 0 auto; position: sticky" ></div>


<script>
    $(document).ready(function () {
        $.getJSON("/User/GetData", function (data) {
            var Names = []
            var Qts = []
            for (var i = 0; i < data.length; i++) {
                Names.push(data[i].name);
                Qts.push(data[i].count);
            }

            Highcharts.chart('container', {
                chart: {
                    type: 'line'
                },
                title: {
                    text: 'Tickets'
                },
                subtitle: {
                    text: ''
                },
                xAxis: {
                    categories: Names
                },
                yAxis: {
                    title: {
                        text: 'Tickets'
                    }
                },
                plotOptions: {
                    line: {
                        dataLabels: {
                            enabled: true
                        },
                        enableMouseTracking: false
                    }
                },
                series: [{
                    name: 'Trend',
                    data: Qts
                }]
            });
        });
    });


</script>

@{
    /*
           <div id="grid" style="float: right; height: 10px; width: 740px; margin-right: 14px; margin-top: -330px;">
                    @grid.GetHtml(

                                tableStyle: "table table-responsive table-bordered",
                                columns: grid.Columns(
                                 grid.Column(columnName: "Title", header: "Title"),
                                 grid.Column(columnName: "Description", header: "Description"),
                                 grid.Column(columnName: "CreatedDate", header: "Date", format: (item) => item.CreatedDate.ToShortDateString())

                                 //format: @<text><div class="edit" data-id="@item.ID" data-propertyname="Title">@item.Title</div></text>
                                 // format:@<text><div class="editSelect" data-id="@item.ID" data-propertyname="Priorities">@item.Priorities</div></text>)
                                 //format:@<text><div class="edit" data-id="@item.ID" data-propertyname="Description">@item.Description</div></text>
                                 )
                             )
                    </div>*/
}
